name: GitHub Actions

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint code with ESLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm ci
      - name: Run ESLint
        run: npm run lint

  unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm ci
      - run: npm run test --if-present

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, unit_tests]
    steps:
      - name: Afficher la date
        run: date
      - name: Afficher le contenu du rÃ©pertoire courant
        run: ls -l
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - run: npm ci
      - name: Define env vars
        run: |
          echo "VITE_BUILD_AUTHOR=${{ github.actor }}" >> $GITHUB_ENV
          echo "VITE_BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      - run: npm run build
      - name: Protect .env files
        run: |
          cat > dist/.htaccess << EOF
          <Files .env>
            Order allow,deny
            Deny from all
          </Files>
          EOF
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: front-end-build
          path: ./dist


  deploy_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

        
#   migrate:
#     name: Run DB Migration (if any)
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Example migration step
#         run: echo "Run migration script here"